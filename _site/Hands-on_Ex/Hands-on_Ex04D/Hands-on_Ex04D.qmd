---
title: "Hands-on_Ex04D"
author: "Audrey Tan"
date: "24 April 2025"
date-modified: "last-modified"
---

# **4D) Visualisation Models**

## **4.1 Introduction**

In this section, we will visualise model diagnostic and model parameters by using parameters package.

## **4.2 Visual Anaslytics for Building Better Explanatory Models**

### **4.2.1 The case**

Toyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.

```{r, echo=FALSE}
img <- image_read("https://r4va.netlify.app/chap12/img/image1.jpg")
plot(img)
```

## **4.3 Getting Started**

## **4.4 Installing and loading the required libraries**

For the purpose of this exercise, the following R packages will be used, they are:

-   ggridges, a ggplot2 extension specially designed for plotting ridgeline plots,

-   ggdist, a ggplot2 extension spacially desgin for visualising distribution and uncertainty,

-   tidyverse, a family of R packages to meet the modern data science and visual communication needs,

-   ggthemes, a ggplot extension that provides the user additional themes, scales, and geoms for the ggplots package, and

-   colorspace, an R package provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.

The code chunk below will be used load these R packages into RStudio environment.

```{r}
pacman::p_load(readxl, SmartEDA, tidyverse,
               ggstatsplot, easystats, tidymodels)
```

### **4.4.1 Importing Excel file: readxl methods**

In the code chunk below, [*read_xls()*](https://readxl.tidyverse.org/reference/read_excel.html) of [**readxl**](https://readxl.tidyverse.org/) package is used to import the data worksheet of `ToyotaCorolla.xls` workbook into R.

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale

```

Notice that the output object `car_resale` is a tibble data frame.

### **4.4.2 Multiple Regression Model using lm()**

The code chunk below is used to calibrate a multiple linear regression model by using *lm()* of Base Stats of R.

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```

### **4.4.3 Model Diagnostic: checking for multicolinearity:**

In the code chunk, [*check_collinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [**performance**](https://easystats.github.io/performance/index.html) package.

```{r}
check_collinearity(model)

```

```{r}
check_c <- check_collinearity(model)
plot(check_c)

```

### **4.4.4 Model Diagnostic: checking normality assumption**

In the code chunk, [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [**performance**](https://easystats.github.io/performance/index.html) package.

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
```

```{r}
check_n <- check_normality(model1)
```

```{r}
plot(check_n)
```

### **4.4.5 Model Diagnostic: Check model for homogeneity of variances**

In the code chunk, [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [**performance**](https://easystats.github.io/performance/index.html) package.

```{r}
check_h <- check_heteroscedasticity(model1)
```

```{r}
plot(check_h)
```

### **4.4.6 Model Diagnostic: Complete check**

We can also perform the complete by using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html).

```{r}
check_model(model1)
```

### **4.4.7 Visualising Regression Parameters: see methods**

In the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.

```{r}
plot(parameters(model1))
```

### **4.4.8 Visualising Regression Parameters: *ggcoefstats()* methods**

In the code below, [*ggcoefstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcoefstats.html) of ggstatsplot package to visualise the parameters of a regression model.

```{r}
ggcoefstats(model1, 
            output = "plot")
```

[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2",
    "section": "2.2.1 Installing and loading the required libraries",
    "text": "2.2.1 Installing and loading the required libraries\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below checks if these packages have been installed and also will load them onto the working R environment.\n\npacman::p_load(ggrepel, patchwork, ggthemes, \n               hrbrthemes, tidyverse, plotly)\nlibrary(gridExtra)\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(magick)\n\nLinking to ImageMagick 6.9.12.98\nEnabled features: cairo, freetype, fftw, ghostscript, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fontconfig, x11\n\nlibrary(ggdist)\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\n\nThe following object is masked from 'package:ggthemes':\n\n    theme_map\n\n\nThe following object is masked from 'package:patchwork':\n\n    align_plots\n\nlibrary(ggExtra)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2",
    "section": "2.2.2 Importing data",
    "text": "2.2.2 Importing data\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package and stores it in exam_data in R Studio.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\nThe code chunk below allows a glimpse into exam_data by their 7 column headers.\n\n# Display the structure of your exam_data\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "2.3.1 Working with ggrepel",
    "text": "2.3.1 Working with ggrepel\n\nExample for geom_label_repel\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point(color= \"darkblue\") +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label_repel(aes(label = ID, \n                   colour = GENDER),\n                   fontface = \"bold\")+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2",
    "section": "2.4.1 Working with ggtheme package",
    "text": "2.4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nThe Economist Theme\nIn the example below, The Economist theme is used.\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\",\n                 fill=\"cyan3\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\nWall Street Journal Theme\nIn the example below, The Wall Street Journal theme is used.\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\np&lt;-ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"cyan3\") +\n  theme_wsj()\n\n# Add title\np &lt;- p + labs(title = \"Distribution of English Scores\")\np + theme(\n  plot.title = element_text(color = \"black\", size = 15, face = \"bold\")\n)\n\n\n\nIt also provides some extra geoms and scales for ‘ggplot2’. Consult this vignette to learn more."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2",
    "section": "2.4.2 Working with hrbthems package",
    "text": "2.4.2 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n             aes(x = MATHS,\n                 fill=GENDER)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\") +\n  ggtitle(\"Distribution of Maths scores by Gender\") +\n  theme_ipsum(base_family = \"sans\") \n\n# Add color palette\np + scale_fill_brewer(palette = \"Pastel1\")\n\n\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\n\nIncrease font size/ axis label/ remove grid lines/ add subtitle\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n             aes(x = MATHS,\n                 fill=GENDER)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\", base_family = \"sans\")\n\n# Add color palette and titles\np + scale_fill_brewer(palette = \"Pastel1\") + \n  labs(title = \"Distribution of Math Scores\",\n              subtitle = \"(by gender)\") + \n  theme(\n  plot.title = element_text(color = \"black\", size = 15, face = \"bold\"),\n  plot.subtitle = element_text(color = \"grey34\"),\n)\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2",
    "section": "2.5.1 Creating Composite Graphics: pathwork methods",
    "text": "2.5.1 Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "2.5.2 Combining two ggplot2 graphs",
    "text": "2.5.2 Combining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "2.5.3 Combining three ggplot2 graphs",
    "text": "2.5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“/” operator to stack two ggplot2 graphs,\n“|” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\nTo learn more about, refer to Plot Assembly."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2",
    "section": "2.5.4 Creating a composite figure with tag",
    "text": "2.5.4 Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\nRoman Numerals- Uppercase\n‘I’ for uppercase and ‘i’ for lower case roman numerals\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\nLatin Letters- Uppercase\n‘A’ for uppercase and ‘a’ for lower case Latin letters\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'A')\n\n\n\n\n\nArabic Numerals\n‘1’ for Arabic numerals\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = '1')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2",
    "section": "2.5.5 Creating figure with insert",
    "text": "2.5.5 Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nInsert P2 to Top Left\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\nInsert P1 to Bottom Right\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p1, \n                   left = 0.6, \n                   bottom = 0, \n                   right = 1, \n                   top = 0.4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2",
    "section": "2.5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "2.5.6 Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\nThe PlotThe Code Chunk\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3 \npatchwork & theme_economist()&\n  theme(\n    plot.title = element_text(size = 8),       # Adjust main patchwork title size\n    plot.subtitle = element_text(size = 8),    # Adjust main patchwork subtitle size \n    plot.caption = element_text(size = 7),     # Adjust main patchwork caption size \n    strip.text = element_text(size = 8),        # Adjust facet label sizes \n    axis.title.x = element_text(size = 8),       # Adjust x-axis label sizes\n    axis.title.y = element_text(size = 8)        # Adjust y-axis label sizes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#visualising-patterns-andor-distributions",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#visualising-patterns-andor-distributions",
    "title": "Hands-on Exercise 2",
    "section": "2.5.7 Visualising Patterns and/or Distributions",
    "text": "2.5.7 Visualising Patterns and/or Distributions\n\n2.5.7.1 Creating a Highlight Table\n\nThe hightlight table/ heatmap, uses colour coding to allow quick identification of numbers within a table. It presents patterns, trends, and relationships within the data.\n\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Calculate percentage scores\nexam_data_percentage &lt;- exam_data %&gt;%\n  mutate(\n    ENGLISH_PERCENT = (ENGLISH / 100) * 100,\n    MATHS_PERCENT = (MATHS / 100) * 100,\n    SCIENCE_PERCENT = (SCIENCE / 100) * 100\n  )\n\n# Create the highlight table data\nhighlight_table_data &lt;- exam_data_percentage %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(\n    MATHS = round(mean(MATHS_PERCENT), 1),\n    ENGLISH = round(mean(ENGLISH_PERCENT), 1),\n    SCIENCE = round(mean(SCIENCE_PERCENT), 1)\n  ) %&gt;%\n  pivot_longer(cols = c(ENGLISH, MATHS, SCIENCE), \n               names_to = \"Subject\", \n               values_to = \"Average_Percentage\") %&gt;%\n  pivot_wider(names_from = \"Subject\", \n              values_from = \"Average_Percentage\")\n\n# Create the highlight table using ggplot2\nhighlight_table_plot &lt;- ggplot(highlight_table_data %&gt;%\n                                pivot_longer(\n                                  cols = c(ENGLISH, \n                                           MATHS,\n                                           SCIENCE),\n                                  names_to = \"Subject\",\n                                  values_to= \"Average_Percentage\"),\n                               aes(x = Subject, \n                                    y = factor(CLASS, levels = rev(c(\"3A\", \"3B\", \"3C\", \"3D\", \"3E\", \"3F\", \"3G\", \"3H\", \"3I\"))), \n                                   fill= Average_Percentage)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = Average_Percentage), color = \"black\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"royalblue3\") +\n  labs(\n    title = \"Average Percentage Scores of Subjects by Class\", \n    fill = \"Avg. Percentage\") +\n  theme_minimal() +\n  theme(axis.title = element_blank(),\n        panel.grid = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank())\nprint(highlight_table_plot)\n\n\n\nThe highlight table here shows the average scores for each class by their subject. The colour gradient shows the scores from low (lighter colour) to high (darker colour).\nWe may infer that the average percentage scores for each subject from the students in Class 3A (darker blue) are higher than in 3I (lighter blue). We may continue to compare between subjects and classes in this manner.\n\n\n2.5.7.2 Combining Scatterplot with Marginal Histograms\nA highlight table or scatterplot can be combined with marginal histograms.\n\nThe hightlight table/ scatterplot visualizes the relationship between two subjects.\nThe marginal histogram provides a side-by-side view of the distribution of each subject in the scatterplot.\n\n\nMaths vs Science: Code & PlotMaths vs English: Code & PlotEnglish vs Science: Code & Plot\n\n\n\n# Save the scatter plot in a variable\np &lt;- ggplot(exam_data, aes(x = MATHS, \n                           y = SCIENCE))+\n  geom_point(color = \"navyblue\")+ \n  labs(title = \"Maths vs Science Scores\")\n\n# Plot the scatter plot with marginal histograms\nggMarginal(p, type = \"histogram\",\n           fill='cyan3')\n\n\n\n\n\n\n\n\n\n\n\n# Save the scatter plot in a variable\np &lt;- ggplot(exam_data, aes(x = MATHS, \n                           y = ENGLISH))+\n  geom_point(color = \"navyblue\")+ \n  labs(title = \"Maths vs English Scores\")\n\n# Plot the scatter plot with marginal histograms\nggMarginal(p, type = \"histogram\",\n           fill='cyan3')\n\n\n\n\n\n\n\n\n\n\n\n# Save the scatter plot in a variable\np &lt;- ggplot(exam_data, aes(x =ENGLISH, \n                           y =SCIENCE))+\n  geom_point(color = \"navyblue\")+ \n  labs(title = \"English vs Science Scores\")\n\n# Plot the scatter plot with marginal histograms\nggMarginal(p, type = \"histogram\",\n           fill='cyan3')\n\n\n\n\n\n\n\n\n\n\n\n\nTrend: There appears to be a positive trend for each subject. Students that do well in one appear to do well in the other.\nSkewness: Slightly negatively skewed distribution (longer left tail) for Math, Science and English.\nData concentration: Math [75-90 range], Science [50-75], English [60-80]. Few students at both the ends of higher and lower scores."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-raincloud-plots",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-raincloud-plots",
    "title": "Hands-on Exercise 2",
    "section": "2.5.8 Creating Raincloud plots",
    "text": "2.5.8 Creating Raincloud plots\nShortcomings of barplots:\nThe barplot with whisker error bars to visualise the mean or median and the standard error may be prone to distortion, fail to represent underlying data parameter inferences, lead to misleading inferences of magnitude of difference between conditions, and may obscure difference in distributions (Allen et al., 2021).\nRemedies:\n\nAdd jittered raw data points to the standard boxplot and +/- standard error scheme.\nAdd dotplots tosupplement visualizations of central tendency and error, but at the risk of added complexity due to the dependence of such plots on choices such as bin-width and dot size, and the risk of reading issues when there are many observations.\nViolin plot overlaid with boxplots or similar. However, there is little to be gained statistically, by mirroring the violin plot, and therefore violating the philosophy of minimising the “data-ink ratio” (Allen et al., 2021; Tufte, 1983).\n\nClick to see detailed information on shortcomings and remedies of barplot.\nSolution to limitations:\nThe raincloud plot combines various plots, to address the aforementioned limitations in an intuitive, modular, and statistically robust format. Raincloud plots combine a ‘split-half violin’, raw jittered data points, and a standard visualization of central tendency (i.e., mean or median) and error, such as a boxplot (Allen et al., 2021).\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\n# plot\np4 &lt;- ggplot(simdat, aes(x = group, y = score, fill = group, colour = group)) +\n  geom_flat_violin(\n    position = position_nudge(x = 0.25),\n    adjust = 2,\n    trim = TRUE\n  ) +\n  geom_point(\n    position = position_jitter(width = 0.15),\n    size = 0.25\n  ) +\n  geom_boxplot(\n    aes(x = as.numeric(group) + 0.25, y = score),\n    outlier.shape = NA,\n    alpha = 0.3,\n    width = 0.1,\n    colour = \"BLACK\",\n    position = position_nudge(x = 0)\n  ) +\n  scale_fill_brewer(palette = \"Set2\") +  # palette for the fill\n  scale_color_brewer(palette = \"Set2\") +  # palette for the color\n  guides(fill = \"none\", colour = \"none\") +\n  ylab(\"Score\") +\n  xlab(\"Subject\") +\n  theme_cowplot() +\n  coord_flip() +\n  ggtitle(\"Raincloud Plot\")\n\nsuppressWarnings(plot(p4))  # Suppress warnings\n\n\n\nThe raincloud plot above visualised the following elements:\n\nSplit-half violin (density plot): Distribution of the data for each subject, filled with color, and is a smoothed density estimate of the data.\nBoxplot: Overlaid on top of the violin, showing the quartiles, median, and outliers for the data.\nRaw jittered data points (“rain”): Individual data points (“raindrop”) shown as small, scattered dots. Shows the data points distribution within each subject.\n\n\n2.5.8.1 Drilling Deeper into Interactive Rain Points\nWe may dissect the plot without the violin density plot. Then using tooltip we can hover over each individual “raindrop” to show the student’s ID and Class per subject, in an interactive manner.\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\n# tooltip\nsimdat$tooltip &lt;- paste0(\"ID = \", simdat$ID, \"\\nClass = \", simdat$CLASS)\n\n# Create the plot\np4_interactive &lt;- suppressWarnings({\n  p4 &lt;- ggplot(simdat, aes(x = group, y = score, fill = group, colour = group)) +  geom_point(\n      aes(text = tooltip),  # Add tooltip in the 'text' aesthetic\n      position = position_jitter(width = 0.15),\n      size = 0.25\n    ) +\n    geom_boxplot(\n      aes(x = as.numeric(group) + 0.25, y = score),\n      outlier.shape = NA,\n      alpha = 0.3,\n      width = 0.1,\n      colour = \"BLACK\",\n      position = position_nudge(x = 0)\n    ) +\n    scale_fill_brewer(palette = \"Set2\") +  # palette for the fill\n    scale_color_brewer(palette = \"Set2\") +  # palette for the color\n    guides(fill = \"none\", colour = \"none\") +\n    ylab(\"Score\") +\n    xlab(\"Subject\") +\n    theme_cowplot() +\n    coord_flip() +\n    ggtitle(\"Dissected Raincloud Plot\")\n\n  # Convert to interactive plotly plot with the tooltip\n  ggplotly(p4, tooltip = \"text\")  # Use 'text' for hover tooltip\n})\n\n# Display the interactive plot\np4_interactive"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi, my name is Audrey!\nEducation\nSingapore Management University\nMasters of IT in Business (Data Science & Analytics)\nExperience\nAnalytics | Finance | Risk & Compliance\nCPA certified\nEnjoys\nCoffee"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications homepage. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "1.2.1 Install and launching R packages",
    "text": "1.2.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\nLoad the required libraries\n\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(magick)\n\nLinking to ImageMagick 6.9.12.98\nEnabled features: cairo, freetype, fftw, ghostscript, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fontconfig, x11"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "1.2.2 Importing the data",
    "text": "1.2.2 Importing the data\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package and stores it in exam_data in R Studio.\n\nexam_data &lt;-read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n\n\nThe data consists of year end examination grades of a cohort of primary 3 students from a local school.\nThe dataframe has 7 columns and 322 rows. Four of the columns contains categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "1.3.1 R Graphics VS ggplot",
    "text": "1.3.1 R Graphics VS ggplot\n\nR Graphics\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\nThe code is simpler for R Graphics as compared to ggplot.\n\n\nGGPLOT2\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 10,\n                 boundary = 100,\n                 color = \"black\",\n                 fill=\"mediumorchid\")+\n  ggtitle(\"Distribution of Maths Scores\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nHowever, here are a few advantages of ggplot2:\n\nNo need to make own legends.\nAble to perform faceting (1.9 Essential Grammatical Elements in ggplot2: Facets) to display data in multiple subplots.\nAble to use tidydata to do exploratory data analysis through data.table or dplyr.\nggplot2 looks better\n\nAs pointed out by Hadley Wickham :\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "1.4.1 A Layered Grammar of Graphics",
    "text": "1.4.1 A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\n\n\n\n\n\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1",
    "section": "1.7.1 Geometric Objects: geom_bar",
    "text": "1.7.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar(aes(fill = RACE), alpha = 0.5)+\nggtitle(\"Barplot of Races\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1",
    "section": "1.7.1 Geometric Objects: geom_dotplot",
    "text": "1.7.1 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5, fill = \"darkseagreen1\")+  \nggtitle(\"Dotplot of Maths Scores\")\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\nThe code chunk below performs the following two steps:\n1) scale_y_continuous() is used to turn off the y-axis, and\n2) binwidth argument is used to change the binwidth to 2.5.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5, fill = \"darkseagreen1\", alpha = 0.5) +\nggtitle(\"Dotplot of Maths Scores\")+\nscale_y_continuous(NULL, breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1",
    "section": "1.7.3 Geometric Objects: geom_histogram()",
    "text": "1.7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar(aes(fill = GENDER), alpha = 0.5)+  \nggtitle(\"Barplot of Races by Gender\")\n\n\n\n\n\n\n\n\nNote that the default bin is 30."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1",
    "section": "1.7.4 Modifying a geometric object by changing geom()",
    "text": "1.7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"darkorchid2\") +  \nggtitle(\"Distribution of Maths Scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1",
    "section": "1.7.5 Modifying a geometric object by changing aes()",
    "text": "1.7.5 Modifying a geometric object by changing aes()\n\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic(). R Color Brewer is used to set a palette colour called Set2.\n\n\nhst&lt;-ggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\") +  \n  ggtitle(\"Distribution of Maths Scores by Gender\")\nhst + scale_fill_brewer(palette = \"Set2\")\n\n\n\n\n\n\n\n\nNote. This approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "title": "Hands-on Exercise 1",
    "section": "1.7.6 Geometric Objects: geom_density",
    "text": "1.7.6 Geometric Objects: geom_density\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()  +  \nggtitle(\"Density plot of Maths Scores\")\n\n\n\n\n\n\n\n\n\nTwo density lines\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density(aes(fill = GENDER), alpha = 0.5) +  \nggtitle(\"Density plot of Maths Scores by Gender\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1",
    "section": "1.7.7 Geometric Objects: geom_boxplot",
    "text": "1.7.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(aes(fill = GENDER), alpha = 0.5)  +  \nggtitle(\"Boxplot of Maths Scores by Gender\")\n\n\n\n\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(aes(fill = GENDER), alpha = 0.5, notch=TRUE)+  \nggtitle(\"Notched plot of Maths Scores by Gender\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1",
    "section": "1.7.8 Geometric Objects: geom_violin",
    "text": "1.7.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin(aes(fill = GENDER), alpha = 0.5) +  \nggtitle(\"Violin plot of Maths Scores by Gender\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1",
    "section": "1.7.9 Geometric Objects: geom_point()",
    "text": "1.7.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH,\n           color=GENDER)) +\n  geom_point(aes(fill = GENDER), alpha = 0.5) +  \nggtitle(\"Scatter plot of Maths by English Scores with Gender\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-on Exercise 1",
    "section": "1.7.10 geom objects can be combined",
    "text": "1.7.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data = exam_data, \n       aes(x = GENDER, y = MATHS)) +\n  geom_boxplot(aes(fill = GENDER), alpha = 0.5) +   # color-filled \n  geom_jitter(aes(color = GENDER),              \n              width = 0.2, size = 0.8, alpha = 0.7) +\n  ggtitle(\"Maths Scores by Gender\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1",
    "section": "1.8.1 Working with stat()",
    "text": "1.8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot(aes(fill = GENDER), alpha = 0.5)+\n  ggtitle(\"Boxplot of Maths Scores by Gender\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1",
    "section": "1.8.2 Working with stat - the stat_summary() method",
    "text": "1.8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot(aes(fill = GENDER), alpha = 0.5) +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)    +\n  ggtitle(\"Boxplot of Maths Scores by Gender\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1",
    "section": "1.8.3 Working with stat - the geom() method",
    "text": "1.8.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot(aes(fill = GENDER), alpha = 0.5) +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4) +\n  ggtitle(\"Boxplot of Maths Scores by Gender\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1",
    "section": "1.8.4 Adding a best fit curve on a scatterplot?",
    "text": "1.8.4 Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point(aes(color = GENDER), alpha = 0.5) +\n  geom_smooth(size=0.5) +\n  ggtitle(\"Scatter plot of Maths by English Scores by Gender\") \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nNote. The default method used is loess.\n\nOverriding best fit smoothing method\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point(aes(color = GENDER), alpha = 0.5) +\n  geom_smooth(method=lm, \n              linewidth=0.5)+\n  ggtitle(\"Scatter plot of Maths by English Scores by Gender\") \n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1",
    "section": "1.9.1 Working with facet_wrap()",
    "text": "1.9.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,aes(fill = CLASS), alpha = 0.5) +\n    facet_wrap(~ CLASS)       +\n  ggtitle(\"Trellis plot of Maths Scores for different Classes\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1",
    "section": "1.9.2 facet_grid() function",
    "text": "1.9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,aes(fill = CLASS), alpha = 0.5) +\n    facet_grid(~ CLASS)      +\n  ggtitle(\"Trellis plot of Maths Scores for different Classes\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1",
    "section": "1.10.1 Working with Coordinate",
    "text": "1.10.1 Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar(aes(fill = RACE), alpha = 0.5)    +\n  ggtitle(\"Bar plot for Races\") \n\n\n\n\n\n\n\n\n\nFlipping into horizontal bar chart\nThe code chunk below flips the vertical bar chart into horizontal bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar(aes(fill = RACE), alpha = 0.5) +\n  coord_flip() +\n  ggtitle(\"Bar plot for Races\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1",
    "section": "1.10.2 Changing the y- and x-axis range",
    "text": "1.10.2 Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point(aes(color = GENDER), alpha = 0.5) +\n  geom_smooth(method=lm, linewidth=0.5)  +\n  ggtitle(\"Scatter plot of Math by English Scores with Gender\") \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nStarting the axis ranges from 0-100\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point(aes(color = GENDER), alpha = 0.5) +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n  ggtitle(\"Scatter plot of Math by English Scores with Gender\") \n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "1.11.1 Working with theme",
    "text": "1.11.1 Working with theme\n\nGray\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\n\nClassic\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\nMinimal\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nBlack and White\nThe code chunk below plot a horizontal bar chart using theme_bw()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_bw()"
  }
]